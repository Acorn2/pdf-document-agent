version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-document_analysis}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pdf-agent-network

  # Redis缓存和消息队列
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pdf-agent-network

  # 后端API服务
  api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-document_analysis}
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - QWEN_API_KEY=${QWEN_API_KEY}
      - LLM_TYPE=${LLM_TYPE:-openai}
      - EMBEDDING_TYPE=${EMBEDDING_TYPE:-openai}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./uploads:/app/uploads
      - ./vector_db:/app/vector_db
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - pdf-agent-network

  # Celery工作者
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-document_analysis}
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - QWEN_API_KEY=${QWEN_API_KEY}
      - LLM_TYPE=${LLM_TYPE:-openai}
      - EMBEDDING_TYPE=${EMBEDDING_TYPE:-openai}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./uploads:/app/uploads
      - ./vector_db:/app/vector_db
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - pdf-agent-network

  # 前端应用
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - pdf-agent-network

  # 统一网关
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
      - frontend
    restart: unless-stopped
    networks:
      - pdf-agent-network

  # Celery监控
  flower:
    image: mher/flower:2.0
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=5555
    ports:
      - "${FLOWER_PORT:-5555}:5555"
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - pdf-agent-network

volumes:
  postgres_data:
  redis_data:

networks:
  pdf-agent-network:
    driver: bridge 